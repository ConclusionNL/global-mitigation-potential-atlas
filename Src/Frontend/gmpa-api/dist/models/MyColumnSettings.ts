/* tslint:disable */
/* eslint-disable */
/**
 * GMPA - API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Alignment } from './Alignment';
import {
    AlignmentFromJSON,
    AlignmentFromJSONTyped,
    AlignmentToJSON,
} from './Alignment';

/**
 * 
 * @export
 * @interface MyColumnSettings
 */
export interface MyColumnSettings {
    /**
     * 
     * @type {Array<string>}
     * @memberof MyColumnSettings
     */
    cssClasses?: Array<string> | null;
    /**
     * 
     * @type {Alignment}
     * @memberof MyColumnSettings
     */
    horizontalAlignment?: Alignment;
    /**
     * 
     * @type {Alignment}
     * @memberof MyColumnSettings
     */
    verticalAlignment?: Alignment;
}

/**
 * Check if a given object implements the MyColumnSettings interface.
 */
export function instanceOfMyColumnSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MyColumnSettingsFromJSON(json: any): MyColumnSettings {
    return MyColumnSettingsFromJSONTyped(json, false);
}

export function MyColumnSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MyColumnSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cssClasses': !exists(json, 'cssClasses') ? undefined : json['cssClasses'],
        'horizontalAlignment': !exists(json, 'horizontalAlignment') ? undefined : AlignmentFromJSON(json['horizontalAlignment']),
        'verticalAlignment': !exists(json, 'verticalAlignment') ? undefined : AlignmentFromJSON(json['verticalAlignment']),
    };
}

export function MyColumnSettingsToJSON(value?: MyColumnSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cssClasses': value.cssClasses,
        'horizontalAlignment': AlignmentToJSON(value.horizontalAlignment),
        'verticalAlignment': AlignmentToJSON(value.verticalAlignment),
    };
}

