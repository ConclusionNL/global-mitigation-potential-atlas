/* tslint:disable */
/* eslint-disable */
/**
 * GMPA - API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    HeaderViewModel,
    instanceOfHeaderViewModel,
    HeaderViewModelFromJSON,
    HeaderViewModelFromJSONTyped,
    HeaderViewModelToJSON,
} from './HeaderViewModel';
import {
    IGridControlApiModel,
    instanceOfIGridControlApiModel,
    IGridControlApiModelFromJSON,
    IGridControlApiModelFromJSONTyped,
    IGridControlApiModelToJSON,
} from './IGridControlApiModel';
import {
    ParagraphViewModel,
    instanceOfParagraphViewModel,
    ParagraphViewModelFromJSON,
    ParagraphViewModelFromJSONTyped,
    ParagraphViewModelToJSON,
} from './ParagraphViewModel';
import {
    TagTitleViewModel,
    instanceOfTagTitleViewModel,
    TagTitleViewModelFromJSON,
    TagTitleViewModelFromJSONTyped,
    TagTitleViewModelToJSON,
} from './TagTitleViewModel';

/**
 * @type GridColumnApiModelControlsInner
 * 
 * @export
 */
export type GridColumnApiModelControlsInner = HeaderViewModel | IGridControlApiModel | ParagraphViewModel | TagTitleViewModel;

export function GridColumnApiModelControlsInnerFromJSON(json: any): GridColumnApiModelControlsInner {
    return GridColumnApiModelControlsInnerFromJSONTyped(json, false);
}

export function GridColumnApiModelControlsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GridColumnApiModelControlsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...HeaderViewModelFromJSONTyped(json, true), ...IGridControlApiModelFromJSONTyped(json, true), ...ParagraphViewModelFromJSONTyped(json, true), ...TagTitleViewModelFromJSONTyped(json, true) };
}

export function GridColumnApiModelControlsInnerToJSON(value?: GridColumnApiModelControlsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfHeaderViewModel(value)) {
        return HeaderViewModelToJSON(value as HeaderViewModel);
    }
    if (instanceOfIGridControlApiModel(value)) {
        return IGridControlApiModelToJSON(value as IGridControlApiModel);
    }
    if (instanceOfParagraphViewModel(value)) {
        return ParagraphViewModelToJSON(value as ParagraphViewModel);
    }
    if (instanceOfTagTitleViewModel(value)) {
        return TagTitleViewModelToJSON(value as TagTitleViewModel);
    }

    return {};
}

