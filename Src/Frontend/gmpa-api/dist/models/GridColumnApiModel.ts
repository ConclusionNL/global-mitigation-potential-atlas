/* tslint:disable */
/* eslint-disable */
/**
 * GMPA - API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GridColumnApiModelControlsInner } from './GridColumnApiModelControlsInner';
import {
    GridColumnApiModelControlsInnerFromJSON,
    GridColumnApiModelControlsInnerFromJSONTyped,
    GridColumnApiModelControlsInnerToJSON,
} from './GridColumnApiModelControlsInner';
import type { MyColumnSettings } from './MyColumnSettings';
import {
    MyColumnSettingsFromJSON,
    MyColumnSettingsFromJSONTyped,
    MyColumnSettingsToJSON,
} from './MyColumnSettings';

/**
 * 
 * @export
 * @interface GridColumnApiModel
 */
export interface GridColumnApiModel {
    /**
     * 
     * @type {number}
     * @memberof GridColumnApiModel
     */
    width?: number;
    /**
     * 
     * @type {MyColumnSettings}
     * @memberof GridColumnApiModel
     */
    settings?: MyColumnSettings;
    /**
     * 
     * @type {Array<GridColumnApiModelControlsInner>}
     * @memberof GridColumnApiModel
     */
    controls?: Array<GridColumnApiModelControlsInner> | null;
}

/**
 * Check if a given object implements the GridColumnApiModel interface.
 */
export function instanceOfGridColumnApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GridColumnApiModelFromJSON(json: any): GridColumnApiModel {
    return GridColumnApiModelFromJSONTyped(json, false);
}

export function GridColumnApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GridColumnApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'width': !exists(json, 'width') ? undefined : json['width'],
        'settings': !exists(json, 'settings') ? undefined : MyColumnSettingsFromJSON(json['settings']),
        'controls': !exists(json, 'controls') ? undefined : (json['controls'] === null ? null : (json['controls'] as Array<any>).map(GridColumnApiModelControlsInnerFromJSON)),
    };
}

export function GridColumnApiModelToJSON(value?: GridColumnApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'width': value.width,
        'settings': MyColumnSettingsToJSON(value.settings),
        'controls': value.controls === undefined ? undefined : (value.controls === null ? null : (value.controls as Array<any>).map(GridColumnApiModelControlsInnerToJSON)),
    };
}

