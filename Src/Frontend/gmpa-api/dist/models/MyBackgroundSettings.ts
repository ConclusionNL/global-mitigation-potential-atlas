/* tslint:disable */
/* eslint-disable */
/**
 * GMPA - API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MyBackgroundSettings
 */
export interface MyBackgroundSettings {
    /**
     * 
     * @type {string}
     * @memberof MyBackgroundSettings
     */
    backgroundImageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MyBackgroundSettings
     */
    backgroundColor?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MyBackgroundSettings
     */
    backgroundBlur?: boolean;
}

/**
 * Check if a given object implements the MyBackgroundSettings interface.
 */
export function instanceOfMyBackgroundSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MyBackgroundSettingsFromJSON(json: any): MyBackgroundSettings {
    return MyBackgroundSettingsFromJSONTyped(json, false);
}

export function MyBackgroundSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MyBackgroundSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'backgroundImageUrl': !exists(json, 'backgroundImageUrl') ? undefined : json['backgroundImageUrl'],
        'backgroundColor': !exists(json, 'backgroundColor') ? undefined : json['backgroundColor'],
        'backgroundBlur': !exists(json, 'backgroundBlur') ? undefined : json['backgroundBlur'],
    };
}

export function MyBackgroundSettingsToJSON(value?: MyBackgroundSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backgroundImageUrl': value.backgroundImageUrl,
        'backgroundColor': value.backgroundColor,
        'backgroundBlur': value.backgroundBlur,
    };
}

