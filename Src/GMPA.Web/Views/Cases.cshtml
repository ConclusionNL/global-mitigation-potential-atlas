@using Umbraco.Cms.Web.Common.UmbracoContext
@model CasesViewModel
@{
    Layout = "Main.cshtml";
}

<h1 class="d-flex justify-content-center">Cases Overview</h1>

<div class="row">
    <div class="col-1">
        <h4>Tag Filter</h4>
        <label>Power</label>
        <input type="checkbox" id="checkboxPower" class="tagCheckbox" />
        <label>Solar</label>
        <input type="checkbox" id="checkboxSolar" class="tagCheckbox" />
        <label>Lorem</label>
        <input type="checkbox" id="checkboxLorem" class="tagCheckbox" />
    </div>

    <div class="col-11">
        @{
            foreach (var caseItem in Model.Cases)
            {
                <div class="card mb-3 @string.Join(" ", caseItem.CaseTags.Select(tag => $"tag-{tag.ToLower()}"))" data-tags="@string.Join(",", caseItem.CaseTags)">
                    <div class="card-header">
                        <h3>@caseItem.CaseName</h3>
                    </div>
                    <div class="card-body">
                        <div>@Html.Raw(caseItem.CaseDescription)</div>
                        <div>
                            <a href="@caseItem.Url">Read more...</a>
                        </div>
                        <h5>Tags</h5>
                        <ul class="tagList">
                            @{
                                var tagCount = caseItem.CaseTags.Count;
                                foreach (var tag in caseItem.CaseTags)
                                {
                                    <li><span class="badge bg-info text-dark">@tag</span></li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
        }
    </div>
</div>

<script>
    var checkboxes = document.querySelectorAll('.tagCheckbox');

    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener('change', applyTagFilters);
    });

    function applyTagFilters() {
        var selectedTags = Array.from(checkboxes)
            .filter(function (checkbox) {
                return checkbox.checked;
            })
            .map(function (checkbox) {
                return checkbox.id.replace('checkbox', '');
            });

        var cards = document.querySelectorAll('.card');

        cards.forEach(function (card) {
            var caseTags = card.getAttribute('data-tags').split(',');

            if (selectedTags.length === 0 || containsAny(caseTags, selectedTags)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    }

    function containsAny(source, target) {
        for (var i = 0; i < target.length; i++) {
            if (source.includes(target[i])) {
                return true;
            }
        }
        return false;
    }
</script>

<style>
    .tagList {
        display: inline;
        list-style-type: none;
    }

        .tagList li {
            display: inline;
            color: white;
            font-style: italic;
            font-size: 16px;
            margin-right: 5px;
        }

    .card {
        margin-bottom: 10px;
    }
</style>